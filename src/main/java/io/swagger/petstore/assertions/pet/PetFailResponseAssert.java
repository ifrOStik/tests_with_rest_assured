package io.swagger.petstore.assertions.pet;

import io.swagger.petstore.models.pet.PetFailResponse;

/**
 * {@link PetFailResponse} specific assertions - Generated by CustomAssertionGenerator.
 *
 * Although this class is not final to allow Soft assertions proxy, if you wish to extend it, 
 * extend {@link AbstractPetNotFoundModelAssert} instead.
 */
@javax.annotation.Generated(value="assertj-assertions-generator")
public class PetFailResponseAssert extends AbstractPetNotFoundModelAssert<PetFailResponseAssert, PetFailResponse> {

  /**
   * Creates a new <code>{@link PetFailResponseAssert}</code> to make assertions on actual PetFailResponse.
   * @param actual the PetFailResponse we want to make assertions on.
   */
  public PetFailResponseAssert(PetFailResponse actual) {
    super(actual, PetFailResponseAssert.class);
  }

  /**
   * An entry point for PetFailResponseAssert to follow AssertJ standard <code>assertThat()</code> statements.<br>
   * With a static import, one can write directly: <code>assertThat(myPetNotFoundModel)</code> and get specific assertion with code completion.
   * @param actual the PetFailResponse we want to make assertions on.
   * @return a new <code>{@link PetFailResponseAssert}</code>
   */
  @org.assertj.core.util.CheckReturnValue
  public static PetFailResponseAssert assertThat(PetFailResponse actual) {
    return new PetFailResponseAssert(actual);
  }
}
